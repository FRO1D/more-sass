/**
 * [EN]
 * Sets the given property value scaling uniformly within the specified limits depending on the viewport width.
 *
 * [RU]
 * Устанавливает значение переданного свойства в соответствии с указанными крайними значениями, зависящими от ширины окна браузера.
 *
 * [Example]
 * fluid-prop('padding-top', (320px, 20px), (1280px, 60px))
 *
 * See https://www.madebymike.com.au/writing/fluid-type-calc-examples/.
 *
 * @param    {string}    $prop     Property name.
 * @param    {list}      $start    Scaling start values structured of ( 'screen width', 'value' ).
 * @param    {list}      $end      Scaling end values structured of ( 'screen width', 'value' ).
 */

@mixin fluid-prop($property, $start, $end, $set-start: true) {
	// Get params
	$start-vw: nth($start, 1);
	$start-val: nth($start, 2);
	$end-vw: nth($end, 1);
	$end-val: nth($end, 2);

	$min-vw: min($start-vw, $end-vw);
	$max-vw: max($start-vw, $end-vw);

	$vw-diff: strip-unit($max-vw - $min-vw);
	$val-diff: strip-unit($end-val - $start-val);

	// Set values
	@if ($set-start) {
		#{$property}: $start-val;
	}

	@media (min-width: $min-vw) {
		#{$property}: calc(#{$start-val} + #{$val-diff} * ((#{100vw} - #{$min-vw}) / #{$vw-diff}));
	}

	@media (min-width: $max-vw) {
		#{$property}: $end-val;
	}
}

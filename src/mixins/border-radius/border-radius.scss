/**
 * [EN]
 * Simplifies usage of `border-radius` property with predefined directions.
 *
 * [RU]
 * Упрощает использование свойства `border-radius` с помощью предустановленных параметров направлений.
 *
 * [Example]
 * .block {
 *   @include border-radius(top, 50px);
 *   @include border-radius(cross-left, 50px);
 * }
 */
/* stylelint-disable declaration-block-no-redundant-longhand-properties */
@use '../../variables';
@use '../../utilities';
@use 'sass:list';

@mixin border-radius($args...) {
	$list: join(variables.$list-of-directions, ('cross-left', 'cross-right', 'all'));

	@if (length($args) == 0) {
		@error('[More SASS error]: Mixin `border-radius` should be used with parameters');
	} @else if (length($args) == 1) {
		border-radius: utilities.transform-null(nth($args, 1), space, false);
	} @else if length($args) == 2 {
		$value: nth($args, 1);
		$corner: nth($args, 2);
		@if (index($list, $corner)) {
			@if ($corner == 'top') {
				border-top-left-radius: $value;
				border-top-right-radius: $value;
			} @else if ($corner == 'top-right') {
				border-top-right-radius: $value;
			} @else if ($corner == 'right') {
				border-top-right-radius: $value;
				border-bottom-right-radius: $value;
			} @else if ($corner == 'bottom-right') {
				border-bottom-right-radius: $value;
			} @else if ($corner == 'bottom') {
				border-bottom-left-radius: $value;
				border-bottom-right-radius: $value;
			} @else if ($corner == 'bottom-left') {
				border-bottom-left-radius: $value;
			} @else if ($corner == 'left') {
				border-top-left-radius: $value;
				border-bottom-left-radius: $value;
			} @else if ($corner == 'top-left') {
				border-top-left-radius: $value;
			} @else if ($corner == 'all') {
				border-radius: $value;
			} @else if ($corner == 'cross-left') {
				border-top-left-radius: $value;
				border-bottom-right-radius: $value;
			} @else if ($corner == 'cross-right') {
				border-top-right-radius: $value;
				border-bottom-left-radius: $value;
			}
		} @else {
			@error 'Corner value must be one of the followings: #{$list}.';
		}
	} @else if length($args) == 4 {
		$args: utilities.transform-null($args, space, true);
		border-top-left-radius: nth($args, 1);
		border-top-right-radius: nth($args, 2);
		border-bottom-right-radius: nth($args, 3);
		border-bottom-left-radius: nth($args, 4);
	}
}

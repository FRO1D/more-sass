@use 'true' as *; // sass-true
@use './bem-modifiers.scss' as *;

@include describe('Mixins') {
	@include describe('bem-modifiers') {
		@include it('Works correctly with blocks') {
			@include assert {
				@include output {
					@at-root {
						.block {
							@include bem-modifiers('--modifier-one', '--modifier-two', '--modifier-three') {
								color: #f00;
							}
						}
					}
				}
				@include expect {
					@at-root {
						.block--modifier-one.block--modifier-two.block--modifier-three {
							color: #f00;
						}
					}
				}
			}
		}
		@include it('Works correctly with elements') {
			@include assert {
				@include output {
					@at-root {
						.block {
							&__element {
								@include bem-modifiers('--modifier-one', '--modifier-two', '--modifier-three') {
									color: #f00;
								}
							}
						}
					}
				}
				@include expect {
					@at-root {
						.block__element--modifier-one.block__element--modifier-two.block__element--modifier-three {
							color: #f00;
						}
					}
				}
			}
		}
		@include it('Works correctly with already modified blocks') {
			@include assert {
				@include output {
					@at-root {
						.block {
							&--modifier-one {
								@include bem-modifiers('--modifier-two', '--modifier-three') {
									color: #f00;
								}
							}
						}
					}
				}
				@include expect {
					@at-root {
						.block--modifier-one.block--modifier-two.block--modifier-three {
							color: #f00;
						}
					}
				}
			}
		}
		@include it('Works correctly with already modified elements') {
			@include assert {
				@include output {
					@at-root {
						.block {
							&__element {
								&--modifier-one {
									@include bem-modifiers('--modifier-two', '--modifier-three') {
										color: #f00;
									}
								}
							}
						}
					}
				}
				@include expect {
					@at-root {
						.block__element--modifier-one.block__element--modifier-two.block__element--modifier-three {
							color: #f00;
						}
					}
				}
			}
		}
		@include it('Works correctly with nested blocks') {
			@include assert {
				@include output {
					@at-root {
						.block {
							& &__element {
								@include bem-modifiers('--modifier-one', '--modifier-two', '--modifier-three') {
									color: #f00;
								}
							}
						}
					}
				}
				@include expect {
					@at-root {
						.block .block__element--modifier-one.block__element--modifier-two.block__element--modifier-three {
							color: #f00;
						}
					}
				}
			}
		}
	}
}

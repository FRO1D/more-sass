/**
 * [EN]
 * Splits a string into a list of strings using specified delimiter.
 *
 * [RU]
 * Разделяет переданную строку в SASS-list, используя переденный разделитель.
 *
 * [Example]
 * $string: 'px,em';
 * str-split($string, ',') --> (px, em)
 *
 * @param      {String}  $string     []    - The string to be split
 * @param      {String}  $delimiter  []    - The delimiter string
 *
 * @return     {List}
 */
@use 'sass:string';
@use 'sass:list';
@use 'sass:meta';

@function str-split($string, $delimiter: '') {
	$string: #{$string};
	$result: ();

	@if (string.length($string) == 0) { @return $result; }

	// Just split each char if no delimiter passed
	@if ($delimiter == '') {
		@for $i from 1 through string.length($string) {
			$result: list.append($result, string.slice($string, $i, $i));
		}

		@return $result;
	}

	$exploding: true;

	@while ($exploding) {
		$d-index: string.index($string, $delimiter);

		@if ($d-index) {
			@if ($d-index) > 1 {
				$temp-string: string.slice($string, 1, $d-index - 1);

				@if ($temp-string == 'null') { $temp-string: null; }

				$result: list.append($result, $temp-string);
				$string: string.slice($string, $d-index + string.length($delimiter));
			} @else if $d-index == 1 {
				$temp-string: str-slice($string, 1, $d-index + string.length($delimiter));

				@if ($temp-string == 'null') { $temp-string: null; }

				$string: $temp-string;
			} @else {
				@if ($string == 'null') { $string: null; }
				$result: list.append($result, $string);
				$exploding: false;
			}
		} @else {
			$result: list.append($result, $string);

			$exploding: false;
		}
	}

	@return $result;
}
